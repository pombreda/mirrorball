#!/usr/bin/python
#
# Copyright (c) rPath, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#


"""
Script for cooking packages with updatebot config.
"""

from header import *

import logging
log = logging.getLogger('scripts.markremoved')

from updatebot import conaryhelper
from updatebot.lib.util import askYn

if len(sys.argv) < 3:
    usage()

helper = conaryhelper.ConaryHelper(cfg)

from conary.conaryclient import cmdline

trvSpecs = set([ cmdline.parseTroveSpec(x) for x in sys.argv[2:] ])

removedSpecs, cs = helper.markremoved(trvSpecs, removeSources=True)

log.info('commiting will remove the following trove specs')
for spec in sorted(removedSpecs):
    log.info('removing: %s=%s[%s]' % spec)

if askYn('remove troves? (y/N):', default=False):
    log.info('committing')
    helper._repos.commitChangeSet(cs)
    log.info('committed')
else:
    log.info('not committed')
