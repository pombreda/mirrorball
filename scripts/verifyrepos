#!/usr/bin/python
#
# Copyright (c) 2008-2009 rPath, Inc.
#
# This program is distributed under the terms of the Common Public License,
# version 1.0. A copy of this license should have been distributed with this
# source file in a file called LICENSE. If it is not present, the license
# is always available at http://www.rpath.com/permanent/licenses/CPL-1.0.
#
# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of merchantability
# or fitness for a particular purpose. See the Common Public License for
# full details.
#

import os
import sys
import copy
import itertools

mirrorballDir = os.path.abspath('../')
sys.path.insert(0, mirrorballDir)

from conary.lib import util
sys.excepthook = util.genExcepthook()

import logging
import updatebot.log

updatebot.log.addRootLogger()
log = logging.getLogger('test')

import rpmutils

from updatebot import config
from updatebot import pkgsource

cfg = config.UpdateBotConfig()
cfg.read(mirrorballDir + '/config/%s/updatebotrc' % sys.argv[1] )

import epdb; epdb.st()
paths = copy.copy(cfg.repositoryPaths)
for path in paths:
    cfg.repositoryPaths = [ path, ]
    pkgSource = pkgsource.PackageSource(cfg)
    pkgSource.load()

    for location in pkgSource.locationMap:
        if not location.startswith(path):
            log.info('skipping %s' % location)
            continue
        url = cfg.repositoryUrl + '/' + location
        try:
            rpmutils.readHeader(url)
        except Exception, e:
            raise
            log.info('failed to open %s, %s' % (url, e))


import epdb; epdb.st()
