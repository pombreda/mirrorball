#!/usr/bin/python
#
# Copyright (c) SAS Institute, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


from header import *

import logging
import tempfile

slog = logging.getLogger('script')

from conary.deps import deps

from updatebot import conaryhelper

helper = conaryhelper.ConaryHelper(cfg)

#import cProfile
#prof = cProfile.Profile()
#prof.enable()

trvLst = helper._repos.findTrove(helper._ccfg.buildLabel, cfg.topGroup)
trvLst = helper._findLatest(trvLst)

slog.info('creating changeset')
cs, packages = helper.promote(
    trvLst,
    [],
    cfg.sourceLabel,
    cfg.targetLabel,
    checkPackageList=False,
    extraPromoteTroves=cfg.extraPromoteTroves,
    commit=False
)
slog.info('changeset created')

#prof.disable()
#prof.dump_stats('promote.lsprof')
#prof.print_stats()

newPkgs = set([ (x[0].split(':')[0], x[1].getSourceVersion(), x[2])
                for x in packages])

pkgMap = {}
for n, v, f in newPkgs:
    if (n, v) not in pkgMap:
        pkgMap[(n, v)] = set()
    pkgMap[(n, v)].add(f)

pkgs = pkgMap.keys()
pkgs.sort()

for pkg in pkgs:
    if pkg[0].startswith('group-'):
        continue
    for flv in pkgMap[pkg]:
        if len(pkgMap[pkg]) > 1 and flv == deps.Flavor():
            continue
        slog.info('promoting %s=%s[%s]' % (pkg[0], pkg[1], flv))


if ui.ask('commit?', default=False):
    slog.info('committing')
    helper._repos.commitChangeSet(cs)
elif ui.ask('write to file?', default=True):
    csFileName = tempfile.mktemp()
    slog.info('writing changeset to %s' % csFileName)
    cs.writeToFile(csFileName)
else:
    slog.info('not committing')

# Log a done mostly for timing purposes
slog.info('done')
