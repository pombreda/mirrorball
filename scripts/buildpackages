#!/usr/bin/python
#
# Copyright (c) rPath, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#


"""
Script for cooking packages with updatebot config.
"""

import os

from header import *
from updatebot import errors
from updatebot import conaryhelper

if len(sys.argv) < 3:
    usage()

helper = conaryhelper.ConaryHelper(cfg)

def validateInput(input):
    for pkgName in input:
        try:
            manifest = helper.getManifest(pkgName)
        except errors.NoManifestFoundError, e:
            yield pkgName, None
            continue
        paths = [ os.path.basename(x) for x in manifest ]
        yield pkgName, tuple(paths)
    raise StopIteration

trvs = set()
label = cfg.topSourceGroup[1]
for pkg, manifest in validateInput(sys.argv[2:]):
    trvs.add((pkg, label, None, manifest))
trvMap = builder.build(trvs)

print "built:\n"

display(trvMap)
