#!/usr/bin/python
#
# Copryright (c) 2008-2009 rPath, Inc.
#
# This program is distributed under the terms of the Common Public License,
# version 1.0. A copy of this license should have been distributed with this
# source file in a file called LICENSE. If it is not present, the license
# is always available at http://www.rpath.com/permanent/licenses/CPL-1.0.
#
# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of merchantability
# or fitness for a particular purpose. See the Common Public License for
# full details.
#


"""
Script for cooking packages with updatebot config.
"""

import os

from header import *
from updatebot import errors
from updatebot import conaryhelper

if len(sys.argv) < 3:
    usage()

helper = conaryhelper.ConaryHelper(cfg)

def validateInput(input):
    for pkgName in input:
        try:
            manifest = helper.getManifest(pkgName)
        except errors.NoManifestFoundError, e:
            yield pkgName, None
            continue
        paths = [ os.path.basename(x) for x in manifest ]
        yield pkgName, tuple(paths)
    raise StopIteration

trvs = set()
label = cfg.topSourceGroup[1]
for pkg, manifest in validateInput(sys.argv[2:]):
    trvs.add((pkg, label, None, manifest))
trvMap = builder.build(trvs)

print "built:\n"

display(trvMap)
