#!/usr/bin/python
#
# Copyright (c) 2008 rPath, Inc.
#
# This program is distributed under the terms of the Common Public License,
# version 1.0. A copy of this license should have been distributed with this
# source file in a file called LICENSE. If it is not present, the license
# is always available at http://www.rpath.com/permanent/licenses/CPL-1.0.
#
# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of merchantability
# or fitness for a particular purpose. See the Common Public License for
# full details.
#

import os
from updatebot import bot, config, display

def validatePlatform(platform, configDir):
    validPlatforms = os.listdir(configDir)
    if platform not in validPlatforms:
        print ('Invalid platform %s... Please select from the following available '
               'platforms %s' % (platform, ', '.join(validPlatforms)))
        return False
    return True

def usage(argv):
    print 'usage: %s <platform name>' % argv[0]
    return 1

def main(argv, configDir='/etc/mirrorball'):
    if len(argv) != 2:
        return usage(argv)

    platform = argv[1]
    if not validatePlatform(platform, configDir):
        return 1

    cfg = config.UpdateBotConfig()
    cfg.read(os.path.join(configDir, platform, 'updatebotrc'))
    obj = bot.Bot(cfg)
    trvMap = obj.update()

    if trvMap:
        print 'Updated the following troves:'
        print display.displayTroveMap(trvMap)

    return 0

if __name__ == '__main__':
    import sys
    from conary.lib import util
    sys.excepthook = util.genExcepthook(debug=False)

    from updatebot import log

    # Initialize logging
    log.addRootLogger()

    # Do update
    sys.exit(main(sys.argv))
